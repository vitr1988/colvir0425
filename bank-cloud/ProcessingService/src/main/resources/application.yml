spring:
  application:
    name: ProcessingService
  cloud:
    openfeign:
      client:
        config:
          default:
            read-timeout: 5000
            connect-timeout: 5000
          CardService: # particular feign client
            read-timeout: 2000
            connect-timeout: 2000
      circuitbreaker.enabled: true
#      discovery:
#      client.simple.instances:
#        AccountService: # instances of account service servers
#          - uri: http://localhost:8802
#        CardService: # instances of card service servers
#          - uri: http://localhost:8803
#    loadbalancer:
#      configurations: health-check
#      health-check:
#        refetch-instances: true
#        refetch-instances-interval: 10000 # 10secs
#        path:
#          AccountService: /actuator/health
#          CardService: /actuator/health
#      clients:
#        AccountService:
#          health-check:
#            interval: 30s
#        CardService:
#          health-check:
#            interval: 30s
  main:
    banner-mode: 'off'

server:
  port: 8804

spring.datasource:
  url: jdbc:h2:file:./ProcessingService;DB_CLOSE_ON_EXIT=FALSE
  driverClassName: org.h2.Driver
  username: sa
  password:

spring.jpa:
  open-in-view: false
  database-platform: org.hibernate.dialect.H2Dialect
  hibernate.ddl-auto: create-drop
  generate-ddl: true
  properties.hibernate.hbm2ddl.auto: create-drop

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/, http://localhost:8762/eureka/

management:
  endpoints.web.exposure.include: 'prometheus, metrics, info, health, env'
  endpoint:
    metrics:
      access: read_only
    prometheus:
      access: read_only
  prometheus:
    metrics:
      export:
        enabled: true